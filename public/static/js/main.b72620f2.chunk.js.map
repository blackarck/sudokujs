{"version":3,"sources":["sudokucode.js","Appheader.js","ModalWind.js","Square.js","SudClassVw.js","About.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Appheader","className","sudokuarr","hiddenSudokuarr","hiddenSudokuclone","i","Array","funcjumbarr","tstarr","cnt","randpos","Math","trunc","random","numbatrandpos","fillsudokuarr","resetAll","icnt","console","log","reducer","icl","l","tmpjumbarr","j","notdone","k","checkrules","shift","tempnum","splice","push","posi","posj","inpval","retvalue","x","outer_loop","hideSudoku","gamemode","callHide","numberofit","ModalWind","handleClose","handleOkbtn","show","windtype","children","modalclass","showokbtn","showHideClassName","onClick","type","Square","disableon","whichClass","this","props","value","hidenarr","String","endsWith","ival","jval","disabled","React","Component","SudClassVw","NewGame","setState","showNewMode","resetGrid1","squarearr1","sudoarr","solveGrid","renderSquare","state","handleClick","iclick","jclick","selectedval","restartGrid","handleChange","e","target","setValueSqr","squarearr","slice","checkWin","diffi","checkGrid","checkArr","isWon","outerloop","alert","id","onChange","defaultValue","About","Container","Jumbotron","ListGroup","variant","Item","Table","Button","href","Navin","Nav","Link","eventKey","App","fluid","Row","Col","md","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,MAC7O,sBAAK1E,UAAU,SAAf,UAAyBuD,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,MAC7O,sBAAK1E,UAAU,SAAf,UAAyBuD,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,MAC7O,sBAAK1E,UAAU,SAAf,UAAyBuD,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,MAC7O,sBAAK1E,UAAU,SAAf,UAAyBuD,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,GAAInB,KAAKmB,aAAa,EAAE,MAC7O,sBAAK1E,UAAU,SAAf,UAAyBuD,KAAKmB,aAAa,EAAE,GAAInB,K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","file":"static/js/main.b72620f2.chunk.js","sourcesContent":["//global vars\n//initialize a 9*9 array of array \n/***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nlet sudokuarr= [[]];\nlet hiddenSudokuarr= [[]];\nlet hiddenSudokuclone= [[]];\n\n\nfor(let i=0;i<9;i++){\n    sudokuarr[i]=new Array(9);\n    hiddenSudokuarr[i]=new Array(9);\n    hiddenSudokuclone[i]=new Array(9);\n}\n \n //main function   fillsudokuarr();\n const resetAll=()=>{\n    for(let i=0;i<9;i++){\n        sudokuarr[i]=new Array(9);\n        hiddenSudokuarr[i]=new Array(9);\n        hiddenSudokuclone[i]=new Array(9);\n    }\n }\n\n//This function will return jumbled number array\nconst funcjumbarr =(tstarr)=>{\n    for(let cnt in tstarr){\n        let randpos= Math.trunc((Math.random()*10)%8);\n        let numbatrandpos=tstarr[randpos];\n        tstarr[randpos]=tstarr[cnt];\n        tstarr[cnt]=numbatrandpos;\n    };\n    return tstarr;\n};\n\n// main algorithm to start filling numbers\nconst fillsudokuarr=()=>{\n    //start filling the row one by one\n    resetAll();\n    let icnt=0;\n    for(let i=0;i<9;i++){\n        //console.log(\"i is \"+i);\n        icnt++;\n        if(icnt>20){\n            //problems with two rows \n            //go back one more row\n            console.log(\"Got stuck gotta redo some steps.\");\n            icnt=0;\n            let reducer=0;\n            switch(i){\n                case(i>7):\n                case(i>6):\n                case(i>5):\n                reducer=4;\n                break;\n                case(i>4):\n                reducer=3;\n                break;\n            }\n            if(i>4){reducer=3;}\n            if(i>3){reducer=2;}\n            for(let icl=i-reducer;icl<=i;icl++){\n            for(let l=0;l<9;l++){\n                sudokuarr[icl][l]=0;\n            }\n        } \n            i=i-reducer;\n        } //end of icnt>20\n\n        let tmpjumbarr= funcjumbarr( [1,2,3,4,5,6,7,8,9]);\n        let ranvaluepos=0;  \n          //console.log(\"tmpjumparr \"+tmpjumbarr.toString());\n       for(let j=0;j<9;j++){\n        //before assigning the value to the sudokubox check for rules  \n            let notdone=true;\n            let k=0;\n            while(notdone && k<25){\n            if(checkrules(i,j,tmpjumbarr[ranvaluepos])){\n                //console.log(\"insert in pos [\"+i+\"][\"+j+\"], value-\"+tmpjumbarr[ranvaluepos]);\n                //the number satisfies all rules put itin  \n                sudokuarr[i][j]=0;\n                sudokuarr[i][j]=tmpjumbarr[ranvaluepos];\n                //remove this value from temporary array\n                tmpjumbarr.shift();\n                notdone=false;\n                break;\n            }else{\n                let tempnum=tmpjumbarr[ranvaluepos];\n                 ///console.log(\"array before splice-\"+tmpjumbarr.toString());\n                tmpjumbarr.splice(ranvaluepos,1);\n                ///console.log(\"array after splice-\"+tmpjumbarr.toString());\n                //remove the number and put it at the end since it might be used later\n                tmpjumbarr.push(tempnum);\n                //console.log(\"array after push -\"+tmpjumbarr.toString());\n             }//end of else\n            //ranvaluepos++;\n            k++;\n        }//end of while\n        if(notdone){ \n            //empty out the filled row and start again\n            for(var l=0;l<9;l++){\n                sudokuarr[i][l]=0;\n            }\n            i--;\n            break;\n        }//end of if notdone\n      }//end of for j\n      //for debugging printSudoku();\n  }//end of for i \n  //printSudoku();  \n  console.log(\"Done generating grid\");\n}//end of fillsudokuarr\n\nconst checkrules=(posi,posj,inpval)=>{\n    let retvalue=false;\n    //console.log(\"Checking for posi-\",posi + \" ,posj-\"+ posj+\",for num-\"+inpval);\n\n    //******Rule 1 check that there shouldn't be same number in the column****/\n    for(let x=0;x<=posi;x++){\n        //console.log(\"Comparing \"+sudokuarr[x][posj] + \", with-\"+inpval);\n        if(sudokuarr[x][posj]===inpval){\n            retvalue= false; //make it false\n            break;\n        }else{\n            retvalue= true;\n        }\n    }//end of for\n    //*******end of Rule1 */\n \n    //****** Rule 2 ******** */\n    if(retvalue){\n    //Grids\n    //0,0 to 2,2\n    if(posi>=0 && posi<=2 && posj>=0 && posj <=2){\n        //console.log(\"Coming in grid 1\");\n        outer_loop:\n        for(var i=0;i<=2;i++){\n            for(var j=0;j<=2;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //0,3 to 2,5\n    if(posi>=0 && posi<=2 && posj>=3 && posj <=5){\n        //console.log(\"Coming in grid 2\");\n        outer_loop:\n        for(var i=0;i<=2;i++){\n            for(var j=3;j<=5;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //0,6 to 2,8\n    if(posi>=0 && posi<=2 && posj>=6 && posj <=8){\n        //console.log(\"Coming in grid 3\");\n        outer_loop:\n        for(var i=0;i<=2;i++){\n            for(var j=6;j<=8;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n\n    //3,0 to 5,2\n    if(posi>=3 && posi<=5 && posj>=0 && posj <=2){\n        //console.log(\"Coming in grid 4\");\n        outer_loop:\n        for(var i=3;i<=5;i++){\n            for(var j=0;j<=2;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //3,3 to 5,5\n    if(posi>=3 && posi<=5 && posj>=3 && posj <=5){\n        //console.log(\"Coming in grid 5\");\n        outer_loop:\n        for(var i=3;i<=5;i++){\n            for(var j=3;j<=5;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //3,6 to 5,8\n    if(posi>=3 && posi<=5 && posj>=6 && posj <=8){\n        //console.log(\"Coming in grid 6\");\n        outer_loop:\n        for(var i=3;i<=5;i++){\n            for(var j=6;j<=8;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n\n    //6,0 to 8,2\n    if(posi>=6 && posi<=8 && posj>=0 && posj <=2){\n        //console.log(\"Coming in grid 7\");\n        outer_loop:\n        for(var i=6;i<=8;i++){\n            for(var j=0;j<=2;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //6,3 to 8,5\n    if(posi>=6 && posi<=8 && posj>=3 && posj <=5){\n        //console.log(\"Coming in grid 8\");\n        outer_loop:\n        for(var i=6;i<=8;i++){\n            for(var j=3;j<=5;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    //6,6 to 8,8\n    if(posi>=6 && posi<=8 && posj>=6 && posj <=8){\n        //console.log(\"Coming in grid 9\");\n        outer_loop:\n        for(var i=6;i<=8;i++){\n            for(var j=6;j<=8;j++){\n                if(sudokuarr[i][j]===inpval){\n                    retvalue=false;\n                    break outer_loop;\n                }//end of if\n            }//end of for j\n        }//end of for i\n    }\n    \n\n    }\n    //******* End of Rule 2 */\n\n    return retvalue;\n}//end of checkrules\n\nconst printSudoku=(whichOne)=>{\n    for(let i=0;i<9;i++){\n        switch(whichOne){\n            case 0:\n                console.log(\"sudokuarr-\"+sudokuarr[i].toString());\n            break;\n\n            case 1:\n                console.log(\"hidesudokuarr-\"+hiddenSudokuarr[i].toString());\n            break;\n\n            case 2:\n                console.log(\"hideCloneArr-\"+hiddenSudokuclone[i].toString());\n            break;\n        }\n      \n    }//end of for\n    console.log(\"******************\");\n}//end of printSudoku\n\n\nconst hideSudoku=(gamemode)=>{\n    //Easy 1- 32    Med 2- 28   Hard -3 22\n\n    for(let i=0;i<9;i++){\n        for(let j=0;j<9;j++){\n            hiddenSudokuarr[i][j]= sudokuarr[i][j];\n\n        }}\n     //hiddenSudokuarr= Array.from(sudokuarr);\n\n    switch(gamemode){\n        case(1):\n            //start easy mode\n            callHide(26);\n        break;\n\n        case(2):\n          //start hard mode\n           callHide(23);\n        break;\n\n        case(3):\n          //start medium mode\n          callHide(19);\n        break;\n    }//end of switch statement\n\n    for(let i=0;i<9;i++){\n        for(let j=0;j<9;j++){\n            hiddenSudokuclone[i][j]=   hiddenSudokuarr[i][j];\n\n        }}\n\n    \n\n}//end of function hidesudoku\n\n \n\nconst callHide=(numberofit)=>{\n   \n    for(let l=0;l<(81-numberofit);l++){\n        //call random i\n        //call random j\n        var i= (Math.trunc(Math.random()*10))%9;\n        var j= (Math.trunc(Math.random()*10))%9;\n         hiddenSudokuarr[i][j]=\" \";\n        //console.log(\"Random i is \"+i +\", j is \"+j);\n    }\n\n}\n\nexport{sudokuarr,fillsudokuarr,printSudoku,hideSudoku,hiddenSudokuarr,hiddenSudokuclone}","import React from 'react'\nimport './App.css';\n\n /***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nconst Appheader = () => {\n    return (\n        <div>\n           \n            <div className=\"App-header\">\n                Sudoku JS Implementation\n            </div>\n        </div>\n    )\n}\n\nexport default Appheader\n","import React from 'react'\nimport './modal.css';\n\n/***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nconst ModalWind = ({ handleClose,handleOkbtn, show,windtype,children}) => {\n\n    var modalclass=\"modal-main\";\n    var showokbtn=false;\n    //console.log(\"windtype is \"+windtype );\n    if(windtype===\"difficulty\"){\n      modalclass=modalclass+ \" displayback\";\n      showokbtn=true;\n    }\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <div className={showHideClassName} onClick={handleClose}>\n        <section className= {modalclass}>\n           {children}\n           <button type=\"button\" show={showokbtn} onClick={handleOkbtn}>\n            Ok\n          </button>\n          <button type=\"button\" onClick={handleClose}>\n            Close\n          </button>\n        </section>\n      </div>\n    )\n}\n\nexport default ModalWind\n","import React  from 'react';\nimport './App.css';\n\n/***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nexport default class Square extends React.Component {\n\n\n    render() {\n   var disableon=false;\n   var whichClass=\"SudokBtn\";\n   if(this.props.value===this.props.hidenarr && this.props.value !==\" \"){\n    //console.log(\"it should be disabled \");\n    disableon=true;\n    whichClass=\"SudokuDisBtn\"\n  }\n\n  if( String(this.props.value).endsWith(\"x\")){\n    whichClass=whichClass+\" RedBtn\";\n  }\n\n  if(this.props.ival === 2 || this.props.ival === 5 ){\n    whichClass=whichClass + \" bpad\";  \n  }\n  if(this.props.jval === 2 || this.props.jval ===5){\n    whichClass= \"rpad \" + whichClass ;\n  }\n\n      return (\n        <button\n          className={whichClass}\n          onClick={() => this.props.onClick()} disabled={disableon}>\n          {this.props.value}\n        </button>\n      );\n    }\n  }","import React, { Component } from 'react';\nimport {printSudoku,sudokuarr,fillsudokuarr,hideSudoku,hiddenSudokuarr,hiddenSudokuclone} from './sudokucode';\nimport './App.css';\nimport ModalWind from './ModalWind';\nimport Square from './Square';\n\n/***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nexport default class SudClassVw extends Component {\n\n    constructor(props){\n        super(props);\n        fillsudokuarr();\n        hideSudoku(2);\n\n        //calculate hidden sudoku puzzle and define initial puzzle\n        this.state = {\n            sudoarr: hiddenSudokuarr,\n            show: false,\n            showNewMode:false,\n            iclick:0,\n            jclick:0,\n            selectedval:\"easy\",\n        }\n    }\n\n    NewGame=()=>{\n        this.setState({showNewMode:true});\n    }\n\n    resetGrid1=()=>{\n        //printSudoku(2);\n        var squarearr1=[[]];\n        for(let i=0;i<9;i++){\n            squarearr1[i]=new Array(9);\n             \n        }\n        for(let i=0;i<9;i++){\n            for(let j=0;j<9;j++){\n                squarearr1[i][j] = hiddenSudokuclone[i][j];\n            }\n        }\n        //const squarearr1 = hiddenSudokuclone.slice();\n         this.setState({sudoarr: squarearr1});\n    }\n\n    solveGrid=()=>{\n        this.setState({sudoarr:sudokuarr});\n    }\n\n    renderSquare=(i,j)=> {\n        return (\n          <Square\n            value={this.state.sudoarr[i][j]}\n            hidenarr={hiddenSudokuclone[i][j]}\n            ival={i} jval={j}\n            onClick={() => this.handleClick(i,j)}\n          />\n        );\n      }//end of rendersquare\n\n      handleClose=()=>{\n        this.setState({show:false});\n        this.setState({showNewMode:false});\n      }\n\n      handleClick=(i,j)=>{\n          this.setState({show:true, iclick:i,jclick:j})\n          //console.log(\"Shows state is \"+this.state.show + \" Clicked at-\"+i+\",\"+j);\n      }//end of handleclick\n\n      handleOkbtn=()=>{\n          var diffoption=this.state.selectedval;\n          switch(diffoption){\n              case \"easy\":\n                  this.restartGrid(1);\n                  break;\n               case \"medium\":\n                this.restartGrid(1);\n                break;\n            case \"hard\":\n                this.restartGrid(2);\n                break;\n          }\n       }\n\n       handleChange = (e) => {\n        this.setState({selectedval:e.target.value});\n         //console.log(\"Selection is \"+ e.target.value);\n      }\n\n      setValueSqr=(i)=>{\n        const squarearr = this.state.sudoarr.slice();\n        squarearr[this.state.iclick][this.state.jclick] = i;\n        this.setState({sudoarr:squarearr});\n\n        this.checkWin();\n      }\n\n      restartGrid=(diffi)=>{\n      \n        fillsudokuarr();\n        hideSudoku(diffi);\n        this.setState({sudoarr:hiddenSudokuarr});\n      }\n\n      checkGrid=()=>{\n        //go through all the words\n        // mark red which are incorrect\n        const checkArr= this.state.sudoarr.slice();\n        for(let i=0;i<9;i++){\n            for(let j=0;j<9;j++){\n                if(\n                    checkArr[i][j] !== sudokuarr[i][j] && checkArr[i][j]!==\" \"){\n                    checkArr[i][j] =  checkArr[i][j] + \"x\";\n                }\n            }\n        }//end of for\n        this.setState({sudoarr:checkArr});\n\n      }\n\n      checkWin=()=>{\n        //checkwin condition\n        //do a compare of this grid with our filled grid if all equal its won \n        //show an alert\n        var isWon=true;\n        const checkArr= this.state.sudoarr.slice();\n        outerloop:\n        for(let i=0;i<9;i++){\n            for(let j=0;j<9;j++){\n                if(\n                    checkArr[i][j] !== sudokuarr[i][j]){\n                    isWon=false;\n                    break outerloop;\n                }\n            }\n        }\n        if(isWon){\n            alert(\"Yay !! you won \");\n        }\n\n      }\n\n    render() {\n        //we can have code here\n        \n        return (\n          <main>\n          <div className=\"TopRow\">\n          <div className=\"inarow\">{this.renderSquare(0,0)}{this.renderSquare(0,1)}{this.renderSquare(0,2)}{this.renderSquare(0,3)}{this.renderSquare(0,4)}{this.renderSquare(0,5)}{this.renderSquare(0,6)}{this.renderSquare(0,7)}{this.renderSquare(0,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(1,0)}{this.renderSquare(1,1)}{this.renderSquare(1,2)}{this.renderSquare(1,3)}{this.renderSquare(1,4)}{this.renderSquare(1,5)}{this.renderSquare(1,6)}{this.renderSquare(1,7)}{this.renderSquare(1,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(2,0)}{this.renderSquare(2,1)}{this.renderSquare(2,2)}{this.renderSquare(2,3)}{this.renderSquare(2,4)}{this.renderSquare(2,5)}{this.renderSquare(2,6)}{this.renderSquare(2,7)}{this.renderSquare(2,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(3,0)}{this.renderSquare(3,1)}{this.renderSquare(3,2)}{this.renderSquare(3,3)}{this.renderSquare(3,4)}{this.renderSquare(3,5)}{this.renderSquare(3,6)}{this.renderSquare(3,7)}{this.renderSquare(3,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(4,0)}{this.renderSquare(4,1)}{this.renderSquare(4,2)}{this.renderSquare(4,3)}{this.renderSquare(4,4)}{this.renderSquare(4,5)}{this.renderSquare(4,6)}{this.renderSquare(4,7)}{this.renderSquare(4,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(5,0)}{this.renderSquare(5,1)}{this.renderSquare(5,2)}{this.renderSquare(5,3)}{this.renderSquare(5,4)}{this.renderSquare(5,5)}{this.renderSquare(5,6)}{this.renderSquare(5,7)}{this.renderSquare(5,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(6,0)}{this.renderSquare(6,1)}{this.renderSquare(6,2)}{this.renderSquare(6,3)}{this.renderSquare(6,4)}{this.renderSquare(6,5)}{this.renderSquare(6,6)}{this.renderSquare(6,7)}{this.renderSquare(6,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(7,0)}{this.renderSquare(7,1)}{this.renderSquare(7,2)}{this.renderSquare(7,3)}{this.renderSquare(7,4)}{this.renderSquare(7,5)}{this.renderSquare(7,6)}{this.renderSquare(7,7)}{this.renderSquare(7,8)}</div>\n          <div className=\"inarow\">{this.renderSquare(8,0)}{this.renderSquare(8,1)}{this.renderSquare(8,2)}{this.renderSquare(8,3)}{this.renderSquare(8,4)}{this.renderSquare(8,5)}{this.renderSquare(8,6)}{this.renderSquare(8,7)}{this.renderSquare(8,8)}</div>\n          </div>\n\n          <div className=\"downbtnrow\">\n          <button  className=\"MenuBtn\" onClick={()=> {\n              this.resetGrid1();\n             }}> Reset </button>\n               <button  className=\"MenuBtn\" onClick={()=> {\n              this.NewGame();\n             }}> New </button>\n               <button  className=\"MenuBtn\" onClick={()=> {\n              this.checkGrid();\n             }}> Check </button>\n                <button  className=\"MenuBtn\" onClick={()=> {\n              this.solveGrid();\n             }}> Solve </button>\n          </div>\n\n\n          <ModalWind show={this.state.show} handleClose={this.handleClose}>\n            <div>\n              <div className=\"renderSq\">\n            <button className=\"inputBtn\" \n            onClick={()=> { \n                this.setValueSqr(1);\n              this.handleClose(); }}>1</button>\n               <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(2);\n            this.handleClose(); }}>2</button>\n               <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(3);\n            this.handleClose(); }}>3</button></div>\n    \n           <div className=\"renderSq\">\n            <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(4);\n            this.handleClose(); }}>4</button>\n               <button className=\"inputBtn\" \n            onClick={()=> { this.setValueSqr(5);\n            this.handleClose(); }}>5</button>\n               <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(6);\n            this.handleClose(); }}>6</button></div>\n    \n          <div className=\"renderSq\">\n            <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(7);\n            this.handleClose(); }}>7</button>\n               <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(8);\n            this.handleClose(); }}>8</button>\n               <button className=\"inputBtn\" \n            onClick={()=> { this.setValueSqr(9);\n            this.handleClose();\n              }}>9</button></div>\n\n                <div className=\"renderSq\">\n            <button className=\"inputBtn\" \n            onClick={()=> {  this.setValueSqr(\" \");\n            this.handleClose(); }}>Clear</button>\n\n                </div>\n    \n          </div>\n          </ModalWind>\n\n          <ModalWind show={this.state.showNewMode} handleClose={this.handleClose} handleOkbtn={this.handleOkbtn} windtype=\"difficulty\">\n              <div>\n              <label>Choose a level</label>\n                <select id=\"difficulty\"  onChange={this.handleChange} className=\"SelectOption\">\n                <option value=\"easy\" defaultValue>Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n                </select>\n              </div>\n          </ModalWind>\n          </main>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n /***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nexport default class About extends Component {\n    render() {\n        return (\n            <main>\n                <Container className=\"p-3\">\n                <Jumbotron className=\"pb-1\">\n      <h1 className=\"header\">Sudoku JavaScript Implementation</h1>\n      <h2 className=\"header\">Sudoku Algorithm (no backtracking)</h2>\n      <hr />\n      <p>\n      This program fills the 9*9 grid with valid sudoku numbers. 2 dimension arrays play an important role in most 2d games. Sudoku is no exception, consider it as tiles which needs to fill up the screen at valid position. We pick a box try to insert a number there, run all the rules, if it works good if not try the next number.\n      This implementation don't use back tracking, although parts of algorithm tries to replicate the same scenario i.e. back track your steps and start with next iteration. Heart of this program is a javascript file sudokucode.js, github repository below.\n      </p>\n      <p><h2>Detailed Algorithm</h2></p>\n      <p>\n      <ListGroup variant=\"flush\">\n  <ListGroup.Item>Initialize all arrays used in the program</ListGroup.Item>\n  <ListGroup.Item>Create a randomized array of 9 numbers – tmpjumbarr</ListGroup.Item>\n</ListGroup>\n<hr/>\nFor each of the nine box do below \n<ListGroup variant=\"flush\">\n  <ListGroup.Item>Check whether that number satisfied all the rules or not\n  <ListGroup variant=\"flush\">\n  <ListGroup.Item>-\tNo same number in same row</ListGroup.Item>\n  <ListGroup.Item>-\tNo same number in same column</ListGroup.Item>\n  <ListGroup.Item>-\tNo same number in 3*3 grid that box is part of</ListGroup.Item>\n  </ListGroup>\n</ListGroup.Item>\n  <ListGroup.Item>If the number satisfies fit it in the box, remove this number from tmpjumbarr and move on to next box</ListGroup.Item>\n  <ListGroup.Item>If the number fails, put this number at the end for another box and try the next number in the grid</ListGroup.Item>\n  <ListGroup.Item>Even after multiple tries we are not able to fill the grid, that means we are in deadlock, empty out the row and then start again</ListGroup.Item>\n</ListGroup>\n\n      </p>\n      <p>\n          <Table>\n              <tr><td> Front End </td>\n              <td>Reactjs with bootstrap</td></tr>\n              <tr><td>Back End</td><td>None</td></tr>\n              <tr><td>Hosting</td><td>Firebase</td></tr>\n              <tr><td>Developer</td><td>Vivek Sharma</td></tr>\n              <tr><td>Github</td><td><Button variant=\"light\" href=\"https://github.com/blackarck\">profile</Button></td></tr>\n              <tr><td>Repository</td><td><Button variant=\"light\" href=\"https://github.com/blackarck\">repo</Button></td></tr>\n\n          </Table>\n\n      </p>\n    </Jumbotron>\n                </Container>\n                 \n            </main>\n        )\n    }\n}\n\n","import React from 'react';\nimport './App.css';\nimport {Link} from 'react-router-dom';\nimport  Nav from 'react-bootstrap/Nav';\n\n /***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nfunction Navin() {\n  return (\n    <Nav className=\"flex-column\">\n           <div className=\"navlinks\"><Nav.Link eventKey=\"./about\"  href=\"./about\">About</Nav.Link> \n            <Nav.Link eventKey=\"./sudoku\" href=\"./sudoku\">Sudoku</Nav.Link> \n            </div>\n    </Nav>\n   );\n}\n\nexport default Navin;\n"," import './App.css';\n import Appheader from './Appheader';\n import React from 'react';\n import SudClassVw from './SudClassVw';\n import About from './About';\n import Navin from './Nav';\n import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n import Container from 'react-bootstrap/Container'\n import Row from 'react-bootstrap/Row';\n import Col from 'react-bootstrap/Col';\n\n\n\n /***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nfunction App() {\n  return (\n\n    <Router>\n     <Appheader/>\n     <Container fluid><Row>\n       <Col md=\"3\">\n      <Navin/></Col>\n      <Col md=\"auto\">\n      <Switch>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/sudoku\" component={SudClassVw}/>\n      </Switch></Col>\n      </Row>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/***************\n * developer: Vivek Sharma\n * date : 17-jun-21\n * for sudoky program\n ***************/\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}